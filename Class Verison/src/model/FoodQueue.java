package model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class FoodQueue implements Serializable {

    private static final long serialVersionUID = 123L;

    private List<Customer> queue = new ArrayList<>();// List to store customers in the queue
    private int maxCapacity;// Maximum capacity of the queue
    private int numCustomers;// Number of customers currently in the queue
    private int income = 0;// Income generated by the queue


    public FoodQueue() {
    }

    public FoodQueue(Customer customer) {
    }

    // Getter for the queue
    public List<Customer> getQueue() {
        return queue;
    }

    // Constructor to initialize the FoodQueue with a maximum capacity
    public FoodQueue(int maxCapacity) {
        this.maxCapacity = maxCapacity;
        queue = new ArrayList<>(maxCapacity);
        numCustomers = 0;
    }

    // Check if the queue is full
    public boolean isFull() {
        return numCustomers == maxCapacity;
    }

    // Check if the queue is empty
    public boolean isEmpty() {
        return numCustomers == 0;
    }

    // Get the number of customers in the queue
    public int getNumCustomers() {
        return numCustomers;
    }

    // Get the maximum capacity of the queue
    public int getMaxCapacity() {
        return maxCapacity;
    }

    // Get the income generated by the queue
    public int getIncome() {
        return income;
    }

    // Add a customer to the queue
    public void addCustomer(Customer customer) {
        this.queue.add(customer);
        this.numCustomers++;
    }

    // Remove a customer from the queue at the specified location
    public void removeCustomer(int customerLocation) {
        this.queue.remove(customerLocation);
        this.numCustomers--;
    }

    // Add to the income of the queue
    public void addToIncome(int income) {
        this.income += income;
    }
}
